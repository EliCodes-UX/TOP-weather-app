:root {
  --main-color: #2862cc;
  --secondary-color: #0a3076;
  --accent-color: #053a9a;
  --secondary-accent: #0d43a7;
  --hover-color: #053a9a;
  font-family: 'SomeTimeLaterRegular', 'JelleeBold';
  font-weight: normal;
  font-style: normal;
  --bg: #e3e4e8;
  --fg: #17181c;
  --input: #ffffff;
  --primary: #255ff4;
  --dur: 1s;
  font-size: calc(16px + (24 - 16) * (100vw - 320px) / (1280 - 320));
}
body {
  background-color: var(--main-color);
}
* {
  border: 0;
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body,
input {
  color: var(--bg);
}
body {
  background: var(--main-color);
  justify-content: center;
}

#content {
  display: flex;
  flex-direction: column;
  align-content: center;
  justify-content: center;
  align-items: center;
}
#main-title {
  font-family: 'SomeTimeLaterRegular';
}
h2,
h3,
h4,
h5 {
  font-family: 'JelleeBold';
}
#card-container {
  background-color: var(--secondary-color);
  margin: 1.2rem;
  padding: 1.2em;
  display: grid;
  justify-items: start;
  grid-template-columns: max-content;
  grid-template-rows: max-content;
  border: 1rem solid var(--secondary-accent);
  border-radius: 10%;
}
.display-temp {
  background-color: var(--accent-color);
  padding: 0.8em;
  display: grid;
  grid-template-columns: repeat(2, 2fr);
  grid-template-rows: repeat(3, 2fr);
  align-items: center;
  justify-items: center;
  border: 0.5rem solid var(--secondary-accent);
  border-radius: 10%;
}
.temp {
  display: flex;
  align-items: center;
  justify-content: center;
  margin-left: 2.6em;
  border-bottom: 0.2em solid var(--main-color);
  margin-bottom: 0.3em;
}
.conditionTitle {
  grid-row: 1;
}
.conditions {
  grid-column: 2;
  grid-row: 1;
}
.windTitle {
  grid-column: 1;
  grid-row: 2;
}
.wind {
  grid-column: 2;
  grid-row: 2;
}
.humidityTitle {
  grid-column: 1;
  grid-row: 3;
}
.humidity {
  grid-column: 2;
  grid-row: 3;
}
form,
input,
.caret {
  margin: auto;
}
form {
  position: relative;
  width: 100%;
  max-width: 17em;
}
.display-location {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding-left: 4.2em;
}

input,
.caret {
  display: block;
  transition: all calc(var(--dur) * 0.5) linear;
}
input {
  background: transparent;
  border-radius: 50%;
  box-shadow: 0 0 0 0.25em inset;
  caret-color: var(--primary);
  width: 2em;
  height: 2em;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}
input:focus,
input:valid {
  background: var(--input);
  border-radius: 0.25em;
  box-shadow: none;
  padding: 0.75em 1em;
  transition-duration: calc(var(--dur) * 0.25);
  transition-delay: calc(var(--dur) * 0.25);
  width: 100%;
  height: 3em;
}
input:focus {
  animation: showCaret var(--dur) steps(1);
  outline: transparent;
}
input:focus + .caret,
input:valid + .caret {
  animation: handleToCaret var(--dur) linear;
  background: transparent;
  width: 1px;
  height: 1.5em;
  transform: translate(0, -1em) rotate(-180deg) translate(7.5em, -0.25em);
}
input::-webkit-search-decoration {
  -webkit-appearance: none;
}
label {
  color: #e3e4e8;
  overflow: hidden;
  position: absolute;
  width: 0;
  height: 0;
}
.caret {
  background: currentColor;
  border-radius: 0 0 0.125em 0.125em;
  margin-bottom: -0.6em;
  width: 0.25em;
  height: 1em;
  transform: translate(0, -1em) rotate(-45deg) translate(0, 0.875em);
  transform-origin: 50% 0;
}

/* Animations */
@keyframes showCaret {
  from {
    caret-color: transparent;
  }
  to {
    caret-color: var(--primary);
  }
}
@keyframes handleToCaret {
  from {
    background: currentColor;
    width: 0.25em;
    height: 1em;
    transform: translate(0, -1em) rotate(-45deg) translate(0, 0.875em);
  }
  25% {
    background: currentColor;
    width: 0.25em;
    height: 1em;
    transform: translate(0, -1em) rotate(-180deg) translate(0, 0.875em);
  }
  50%,
  62.5% {
    background: var(--primary);
    width: 1px;
    height: 1.5em;
    transform: translate(0, -1em) rotate(-180deg) translate(7.5em, 2.5em);
  }
  75%,
  99% {
    background: var(--primary);
    width: 1px;
    height: 1.5em;
    transform: translate(0, -1em) rotate(-180deg) translate(7.5em, -0.25em);
  }
  87.5% {
    background: var(--primary);
    width: 1px;
    height: 1.5em;
    transform: translate(0, -1em) rotate(-180deg) translate(7.5em, 0.125em);
  }
  to {
    background: transparent;
    width: 1px;
    height: 1.5em;
    transform: translate(0, -1em) rotate(-180deg) translate(7.5em, -0.25em);
  }
}
